<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class M_statistic extends MY_Model{    function __construct()    {        parent::__construct();        $this->load->helper('model');        $this->load->database();    }    public function getOrdersEmployee($where,$limit=null,$offset=null){        $this->db->select('SUM(order.total_price) as total,SUM(order.payted) as payted,users.phone,users.email,users.fullname,users.id as uid');        $this->db->join('order','order.id_buyer=users.id');        if($where['from'] != '' && $where['to'] !=''){            $this->db->where('order.time >=',$where['from']);            $this->db->where('order.time <=',$where['to']);        }        if($where['key'] != '') {            $this->db->like('users.fullname', $where['key']);        }        $this->db->limit($limit,$offset);        $this->db->order_by('users.id','desc');        $this->db->group_by('users.id');        $q = $this->db->get('users');        return $q->result();    }    public function countOrdersEmployee($where){        $this->db->select('users.id');        $this->db->join('order','order.id_buyer=users.id');        if($where['from'] != '' && $where['to'] !=''){            $this->db->where('order.time >=',$where['from']);            $this->db->where('order.time <=',$where['to']);        }        if($where['key'] != '') {            $this->db->like('users.fullname', $where['key']);        }        $this->db->order_by('users.id','desc');        $this->db->group_by('users.id');        $q = $this->db->get('users');        return $q->num_rows();    }    //employee    public function getOrdersByEmployee($where,$limit=null,$offset=null){        $this->db->select('order.*,users.fullname,users.id as uid,order_item.item_image');        $this->db->join('order_item','order.id=order_item.order_id','left');        $this->db->join('users','order.id_buyer=users.id');        if($where['uid'] != '') {            $this->db->where('users.id', $where['uid']);        }        if($where['from'] != '' && $where['to'] !=''){            $this->db->where('order.time >=',$where['from']);            $this->db->where('order.time <=',$where['to']);        }        $this->db->limit($limit,$offset);        $this->db->order_by('order.id','desc');        $this->db->group_by('order.id');        $q = $this->db->get('order');        return $q->result();    }    public function countOrdersByEmployee($where){        $this->db->select('order.id');        $this->db->join('order_item','order.id=order_item.order_id','left');        $this->db->join('users','order.id_buyer=users.id');        if($where['uid'] != '') {            $this->db->where('users.id', $where['uid']);        }        if($where['from'] != '' && $where['to'] !=''){            $this->db->where('order.time >=',$where['from']);            $this->db->where('order.time <=',$where['to']);        }        $this->db->order_by('order.id','desc');        $this->db->group_by('order.id');        $q = $this->db->get('order');        return $q->num_rows();    }    public function countSearchOrders($where){        $this->db->select('order.id');        $this->db->join('order_item','order.id=order_item.order_id','left');        $this->db->join('users','order.id_buyer=users.id','left');        if($where['key'] != '') {            $this->db->like('users.fullname',$where['key']);            $this->db->or_like('users.phone',$where['key']);            $this->db->or_like('users.email',$where['key']);        }        if($where['from'] != '' && $where['to'] !=''){            $this->db->where('order.time >=',$where['from']);            $this->db->where('order.time <=',$where['to']);        }        $this->db->order_by('order.id','desc');        $this->db->group_by('order.id');        $q=$this->db->get('order');        return $q->num_rows();    }    public function getDebtsByEmployee($where,$limit=null,$offset=null)    {        $this->db->select('SUM(order.total_bill) as total,SUM(order.payted) as payted,users.phone,users.email,users.fullname,users.id as uid');        $this->db->join('order','order.user_id=users.id');        if($where['key'] != '') {            $this->db->like('users.fullname', $where['key']);            $this->db->or_like('users.phone', $where['key']);            $this->db->or_like('users.email', $where['key']);        }        $this->db->limit($limit,$offset);        $this->db->order_by('users.id','desc');        $this->db->group_by('users.id');        $q = $this->db->get('users');        return $q->result();    }    public function countDebtsByEmployee($where){        $this->db->select('users.id');        $this->db->join('order','order.user_id=users.id');        if($where['key'] != '') {            $this->db->like('users.fullname', $where['key']);            $this->db->or_like('users.phone', $where['key']);            $this->db->or_like('users.email', $where['key']);        }        $this->db->order_by('users.id','desc');        $this->db->group_by('users.id');        $q = $this->db->get('users');        return $q->num_rows();    }    //by customer    public function getDebtsByCustomer($where,$limit=null,$offset=null)    {        $this->db->select('order.*,users.fullname,users.id as uid,order_item.item_image');        $this->db->join('order_item','order.id=order_item.order_id','left');        $this->db->join('users','order.user_id=users.id');        if($where['from'] != '' && $where['to'] !=''){            $this->db->where('order.time >=',$where['from']);            $this->db->where('order.time <=',$where['to']);        }        if($where['uid'] != '') {            $this->db->like('users.id', $where['uid']);        }        if($limit != null && $offset != null){            $this->db->limit($limit,$offset);        }        $this->db->order_by('order.id','desc');        $this->db->group_by('order.id');        $q = $this->db->get('order');        return $q->result();    }    public function countDebtsByCustomer($where){        $this->db->select('order.id');        $this->db->join('order_item','order.id=order_item.order_id','left');        $this->db->join('users','order.user_id=users.id');        if($where['from'] != '' && $where['to'] !=''){            $this->db->where('order.time >=',$where['from']);            $this->db->where('order.time <=',$where['to']);        }        if($where['uid'] != '') {            $this->db->like('users.id', $where['uid']);        }        $this->db->order_by('order.id','desc');        $this->db->group_by('order.id');        $q = $this->db->get('order');        return $q->num_rows();    }}